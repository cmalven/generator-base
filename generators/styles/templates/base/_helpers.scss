// ===============================================================
// Helpers
// ===============================================================

/*
  Global helper classes
*/


// ---------------------------------------------------------------
// Clear + Clearfix
// ---------------------------------------------------------------
.h-clear-both { clear: both; }
.h-clearfix { @include clearfix; }


// ---------------------------------------------------------------
// Hide
// ---------------------------------------------------------------
.h-hide-text { @include hide-text; }
.h-hide-visually { @include hide-visually; }


// ---------------------------------------------------------------
// Text
// ---------------------------------------------------------------
.h-text-centered { text-align: center; }
.h-text-left { text-align: left; }
.h-text-right { text-align: right; }
.h-text-transform-none { text-transform: none; }

.h-text-light-on-dark { @include font-smoothing; }
.h-text-smoothing--subpixel { -webkit-font-smoothing: subpixel-antialiased; }
.h-text-smoothing--antialiased { -webkit-font-smoothing: antialiased; }


// ---------------------------------------------------------------
// Transitions
// ---------------------------------------------------------------
$h-transition-duration: 2s;
$h-transition-offset: 1rem;
$h-transition-delay-increment: 0.05 * $h-transition-duration;

.js .h-transition,
.js .h-transition-up,
.js .h-transition-up-less,
.js .h-transition-down,
.js .h-transition-left,
.js .h-transition-scale,
.js .h-transition-right {
  transition: $h-transition-duration ease(out-quint);
  transition-property: opacity, transform;
  opacity: 0;

  &.is-visible {
    opacity: 1;
    transform: translateY(0) translateX(0) scale(1);
  }
}

.js .h-transition {

}

.js .h-transition-up {
  transform: translateY($h-transition-offset);
}

.js .h-transition-up-less {
  transform: translateY(1rem);
}

.js .h-transition-down {
  transform: translateY(-$h-transition-offset);
}

.js .h-transition-left {
  transform: translateX($h-transition-offset);

  @include media('>=medium') {
    transform: translateX($h-transition-offset * 2);
  }
}

.js .h-transition-scale {
  transform: scale(0.9);
}

.js .h-transition-right {
  transform: translateX(-$h-transition-offset);

  @include media('>=medium') {
    transform: translateX(-$h-transition-offset * 2);
  }
}

// Does nothing on its on, but will trigger the addition of a .is-visible
// class on the element which can be use to implement custom animation.
.js .h-transition-animate {}

// Does nothing on its on, but if set all children will animate in
// when this element animates in.
.js .h-transition-stagger-children {}

// Automatically staggered delays on children based on :nth-child
@for $i from 1 through 50 {
  .js .h-transition-delay:nth-child(#{$i}) {
    transition-delay: $i * $h-transition-delay-increment;
  }
}

// Manual delays
@for $i from 1 through 50 {
  .js .h-transition-delay-#{$i} {
    transition-delay: $i * $h-transition-delay-increment;
  }
}

// Remove all transitions
.h-no-transition {
  transition: none !important;
  transition-delay: 0s !important;
}
