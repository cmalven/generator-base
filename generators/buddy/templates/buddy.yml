- pipeline: "Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "http://<%= projectName %>-staging.malven.co"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: build"
    type: "BUILD"
    working_directory: "/buddy/<%= projectName %>"
    docker_image_name: "library/node"
    docker_image_tag: "10.16.3"
    execute_commands:
    - "# CMDs working directory is the pipeline's filesystem with cloned repo "
    - "npm i"
    - "NODE_ENV=production npm run build"
    - ""
    setup_commands:
    - "# Executed on the first pipeline execution only"
    - "# Popular use case: install packages required by your Run Commands"
    - "# Changing the image in the Environment tab will run the commands again"
    - ""
    mount_filesystem_path: "/buddy/<%= projectName %>"
    shell: "SH"
    trigger_condition: "ALWAYS"
  - action: "Execute: composer install"
    type: "BUILD"
    working_directory: "/buddy/<%= projectName %>"
    docker_image_name: "library/php"
    docker_image_tag: "7.3.5"
    execute_commands:
    - "# CMDs working directory is the pipeline's filesystem with cloned repo "
    - "composer install"
    - ""
    setup_commands:
    - "# Executed on the first pipeline execution only"
    - "# Popular use case: install packages required by your Run Commands"
    - "# Changing the image in the Environment tab will run the commands again"
    - "apt-get update && apt-get install -y openssl zlib1g-dev libzip-dev libpng-dev"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - "docker-php-ext-install zip"
    - "docker-php-ext-install gd"
    - "apt-get update && apt-get install git -y"
    - ""
    mount_filesystem_path: "/buddy/<%= projectName %>"
    shell: "SH"
    trigger_condition: "ALWAYS"
  - action: "Rsync Files"
    type: "RSYNC"
    local_path: "/"
    remote_path: "${server_path}"
    login: "${server_user}"
    host: "${server_host}"
    port: "22"
    env_key: "secure!uhJC5TiOOBBs101zu87x3g=="
    authentication_mode: "ENV_KEY"
    archive: true
    delete_extra_files: true
    recursive: true
    compress: true
    deployment_excludes:
    - ".babelrc"
    - ".browserslistrc"
    - ".dockerignore"
    - ".editorconfig"
    - ".env*"
    - ".eslintignore"
    - ".eslintrc"
    - ".git"
    - ".gitignore"
    - ".nvmrc"
    - ".stylelintrc"
    - "/.cache/"
    - "/.composer/"
    - "/.config/"
    - "/.local/"
    - "/.npm/"
    - "/.github/"
    - "/bin/"
    - "/bower_components/"
    - "/cypress/"
    - "/docker/"
    - "/gulp/"
    - "/log/"
    - "/node_modules/"
    - "/resources/"
    - "/src/"
    - "/storage/"
    - "/tmp/"
    - "/web/assets/"
    - "auth.json"
    - "bower.json"
    - "buddy.yml"
    - "composer.json"
    - "composer.lock"
    - "cypress.json"
    - "docker-compose.yml"
    - "Dockerfile"
    - "env.sample"
    - "gulpfile.js"
    - "package.json"
    - "public"
    - "README.md"
    - ".stylelintrc"
    - "package-lock.json"
    - "yarn.lock"
    trigger_condition: "ALWAYS"
  - action: "Craft: Clear Cache and Migrations"
    type: "SSH_COMMAND"
    working_directory: "${server_path}"
    login: "${server_user}"
    host: "${server_host}"
    port: "22"
    env_key: "secure!uhJC5TiOOBBs101zu87x3g=="
    authentication_mode: "ENV_KEY"
    commands:
    - "./craft blitz/cache/refresh"
    - "./craft migrate/all"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Send notification to Pushover"
    type: "PUSHOVER"
    title: "Buddy - <%= projectTitle %> Staging"
    content: "${execution.pipeline.name} execution #${execution.id}"
    link: "${execution.html_url}"
    link_title: "Show execution details"
    device: "desktop-imac"
    priority: "HIGH"
    trigger_condition: "ALWAYS"
    integration_id: 20934
  - action: "Send notification to slack channel on failure"
    type: "SLACK"
    trigger_time: "ON_FAILURE"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "D4BAU65FF"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"danger\",\"fields\":[{\"title\":\"Failed execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 10282
  - action: "Send notification to slack channel on success"
    type: "SLACK"
    trigger_time: "ON_BACK_TO_SUCCESS"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "D4BAU65FF"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 10282
  variables:
  - key: "server_host"
    value: "104.236.66.159"
    id: 153177
    settable: true
    description: ""
  - key: "server_path"
    value: "/srv/users/serverpilot/apps/<%= projectName %>"
    id: 153178
    settable: true
    description: ""
  - key: "server_user"
    value: "serverpilot"
    id: 153179
    settable: true
    description: ""
- pipeline: "Production"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://<%= projectName %>.com"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Frontend Build"
    type: "BUILD"
    working_directory: "/buddy/<%= projectName %>"
    docker_image_name: "library/node"
    docker_image_tag: "10.16.3"
    execute_commands:
    - "# CMDs working directory is the pipeline's filesystem with cloned repo "
    - "npm i"
    - "NODE_ENV=production npm run build"
    - ""
    setup_commands:
    - "# Executed on the first pipeline execution only"
    - "# Popular use case: install packages required by your Run Commands"
    - "# Changing the image in the Environment tab will run the commands again"
    - ""
    volume_mappings:
    - "/:/buddy/<%= projectName %>"
    trigger_condition: "ALWAYS"
    shell: "SH"
  - action: "Composer Install"
    type: "BUILD"
    working_directory: "/buddy/<%= projectName %>"
    docker_image_name: "library/php"
    docker_image_tag: "7.3.5"
    execute_commands:
    - "# CMDs working directory is the pipeline's filesystem with cloned repo "
    - "composer install"
    - ""
    setup_commands:
    - "# Executed on the first pipeline execution only"
    - "# Popular use case: install packages required by your Run Commands"
    - "# Changing the image in the Environment tab will run the commands again"
    - "apt-get update && apt-get install -y openssl zlib1g-dev libzip-dev libpng-dev"
    - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
    - "docker-php-ext-install zip"
    - "docker-php-ext-install gd"
    - "apt-get update && apt-get install git -y"
    - ""
    volume_mappings:
    - "/:/buddy/<%= projectName %>"
    trigger_condition: "ALWAYS"
    shell: "SH"
  - action: "Upload Files"
    type: "RSYNC"
    local_path: "/"
    remote_path: "${server_path}/deploy-cache"
    login: "${server_user}"
    host: "${server_host}"
    port: "22"
    env_key: "secure!IkFRB46U73Msb/zSPo0+DA==.Y26b2+ZqmMUGGQpRHo7r3w=="
    authentication_mode: "ENV_KEY"
    archive: true
    delete_extra_files: true
    recursive: true
    compress: true
    deployment_excludes:
    - ".babelrc"
    - ".browserslistrc"
    - ".dockerignore"
    - ".editorconfig"
    - ".env*"
    - ".eslintignore"
    - ".eslintrc"
    - ".git"
    - ".gitignore"
    - ".nvmrc"
    - ".stylelintrc"
    - "/.cache/"
    - "/.composer/"
    - "/.config/"
    - "/.local/"
    - "/.npm/"
    - "/.github/"
    - "/bin/"
    - "/bower_components/"
    - "/cypress/"
    - "/docker/"
    - "/gulp/"
    - "/log/"
    - "/node_modules/"
    - "/resources/"
    - "/src/"
    - "/storage/"
    - "/tmp/"
    - "/web/assets/"
    - "auth.json"
    - "bower.json"
    - "buddy.yml"
    - "composer.json"
    - "composer.lock"
    - "cypress.json"
    - "docker-compose.yml"
    - "Dockerfile"
    - "env.sample"
    - "gulpfile.js"
    - "package.json"
    - "public"
    - "README.md"
    - ".stylelintrc"
    - "package-lock.json"
    - "yarn.lock"
    trigger_condition: "ALWAYS"
  - action: "Post-deployment"
    type: "SSH_COMMAND"
    working_directory: "${server_path}"
    login: "${server_user}"
    host: "${server_host}"
    port: "22"
    authentication_mode: "PUBLIC_KEY"
    commands:
    - "if [ ! -d \"releases\" ];"
    - "then"
    - " echo \"Creating releases directory\""
    - "mkdir releases"
    - "fi"
    - "if [ -d \"releases/$BUDDY_EXECUTION_REVISION\" ] && [ \"$BUDDY_EXECUTION_REFRESH\" = \"true\" ];"
    - "then"
    - " echo \"Removing: releases/$BUDDY_EXECUTION_REVISION\""
    - " rm -rf releases/$BUDDY_EXECUTION_REVISION;"
    - "fi"
    - "if [ ! -d \"releases/$BUDDY_EXECUTION_REVISION\" ];"
    - "then"
    - " echo \"Creating: releases/$BUDDY_EXECUTION_REVISION\""
    - " cp -dR deploy-cache releases/$BUDDY_EXECUTION_REVISION;"
    - "fi"
    - "echo \"Linking current to revision: $BUDDY_EXECUTION_REVISION\""
    - "rm -f current"
    - "ln -s releases/$BUDDY_EXECUTION_REVISION current"
    - "echo \"Linking web root to current\""
    - "rm -f public_html"
    - "ln -s current public_html"
    - "echo \"Linking .env\""
    - "ln -s \"$(realpath shared/.env)\" current"
    - "echo \"Linking storage\""
    - "rm -rf current/storage"
    - "ln -s \"$(realpath shared/storage)\" current"
    - "echo \"Linking web to public\""
    - "cd current"
    - "rm -rf public"
    - "ln -s web public"
    - "chmod +x ./craft"
    - "echo \"Clearing Craft cache\""
    - "./craft blitz/cache/refresh"
    - "echo \"Running Craft migrations\""
    - "./craft migrate/all"
    - "cd .."
    - "echo \"Removing old releases\""
    - "cd releases && ls -t | tail -n +11 | xargs rm -rf"
    trigger_condition: "ALWAYS"
    run_as_script: true
    shell: "BASH"
  - action: "Send notification to Pushover"
    type: "PUSHOVER"
    title: "Buddy - <%= projectTitle %> Production"
    content: "${execution.pipeline.name} execution #${execution.id}"
    link: "${execution.html_url}"
    link_title: "Show execution details"
    device: "desktop-imac"
    priority: "HIGH"
    trigger_condition: "ALWAYS"
    integration_hash: "5dde343b422f5a6e5bb6ab1a"
  - action: "Send notification to onebot channel on failure"
    type: "SLACK"
    trigger_time: "ON_FAILURE"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "D4BAU65FF"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"danger\",\"fields\":[{\"title\":\"Failed execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_hash: "5dde3439422f5a6e5bb68514"
  - action: "Send notification to onebot channel on success"
    type: "SLACK"
    trigger_time: "ON_BACK_TO_SUCCESS"
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "D4BAU65FF"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_hash: "5dde3439422f5a6e5bb68514"
  variables:
  - key: "server_host"
    value: "XXX.XXX.XXX.XX"
    id: 376005
    description: ""
  - key: "server_path"
    value: "/storage/avXXXXX/www"
    id: 376008
    description: ""
  - key: "server_user"
    value: "avXXXXX"
    id: 376007
    description: ""
